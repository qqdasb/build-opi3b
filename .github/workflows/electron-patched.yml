name: Build Electron with Rockchip MPP Patches

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    - uses: actions/setup-node@v4
      with:
        node-version: 22.13.0
    - name: Prepare
      run: |
        sudo apt update
        sudo apt-get install build-essential clang libdbus-1-dev libgtk-3-dev libnotify-dev libasound2-dev libcap-dev libcups2-dev libxtst-dev libxss1 libnss3-dev curl gperf bison python3-dbusmock openjdk-8-jre libc6-dev-arm64-cross linux-libc-dev-arm64-cross g++-14-aarch64-linux-gnu ninja
# Old
#    - name: Clone Repo
#      run: |
#        git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
#        export PATH=$PATH:$(pwd)/depot_tools
#        export GIT_CACHE_PATH="${HOME}/.git_cache"
#        mkdir -p "${GIT_CACHE_PATH}"
#        mkdir electron && cd electron
#        gclient config --name "src/electron" --unmanaged https://github.com/electron/electron
#        gclient sync --with_branch_heads --with_tags
# New
    - name: Clone Repo
      run: |
        mkdir src
        git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH=$PATH:$(pwd)/depot_tools
        export CHROMIUM_BUILDTOOLS_PATH=$(pwd)/src/buildtools
        cd src
        gclient config --name "src/electron" --unmanaged https://github.com/electron/electron
        gclient sync --with_branch_heads --with_tags --no-history --revision
        pwd
    - name: Install depends from build/install-build-deps.sh
      run: cd src && ./build/install-build-deps.sh && pwd
    - name: Patch
      run: echo "Not complete."
    - name: Build
      run: |
        pwd
        cd src
        gn gen out/Release-arm64 --args='import(\"//electron/build/args/release.gn\") target_cpu = "arm64"'
